name: test Zona

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  minimal_cmake_version:
    name: "Minimal CMake version"
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Get Current CMake version"
        id: cmake_version
        run: |
          work_dir=$(pwd)
          cd ..
          
          cd cmake_min_version
          venv/bin/python3 cmake_downloader.py --first_minor
          output=$(venv/bin/python3 cmake_min_version.py $work_dir)
          echo $output
          
          # Retrieve CMake minimal version from the last line of the tool output.
          current_cmake_version=$(echo ${output} | grep -oP "VERSION \d+\.\d+")
           
          current_cmake_major_ver=$(echo "VERSION 3.8.0" | grep -oP "\d+\.\d+" | cut -d'.' -f 1)
          current_cmake_minor_ver=$(echo "VERSION 3.8.0" | grep -oP "\d+\.\d+" | cut -d'.' -f 2)

          echo $current_cmake_major_ver
          echo $current_cmake_minor_ver
          
          # Saving cmake output in GitHub output
          echo "current_cmake_major_ver=$current_cmake_major_ver" >> $GITHUB_OUTPUT
          echo "current_cmake_minor_ver=$current_cmake_minor_ver" >> $GITHUB_OUTPUT
        
      - name: "Check minimal CMake version"
        env:
          EXPECTED_CMAKE_MAJOR_VER: 3
          EXPECTED_CMAKE_MINOR_VER: 8
          CURRENT_CMAKE_MAJOR_VER: ${{ steps.cmake_version.outputs.current_cmake_major_ver }}
          CURRENT_CMAKE_MINOR_VER: ${{ steps.cmake_version.outputs.current_cmake_minor_ver }}
          RESULT: ${{ CURRENT_CMAKE_MAJOR_VER == EXPECTED_CMAKE_MAJOR_VER }}
          
        run: |
          echo $RESULT
             
